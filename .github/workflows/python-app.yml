name: CI

on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

jobs:
  lint:
    name: Lint with flake8
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v2

    - name: Set up Python 3.9
      uses: actions/setup-python@v2
      with:
        python-version: 3.9

    - name: Install flake8
      run: |
        pip3 install flake8
    - name: Run flake8
      uses: julianwachholz/flake8-action@v1.1.0
      with:
        checkName: 'lint'
      env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

  test:
    needs: lint
    name: Test with pytest
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: [3.6, 3.7, 3.8, 3.9]

    steps:
    - uses: actions/checkout@v2

    - name: Set up Python 3.9
      uses: actions/setup-python@v2
      with:
        python-version: 3.9

    - name: Setup Redis
      uses: supercharge/redis-github-action@8dd3c86cd02fabe1bc459d55ba892a9ce91e23c6

    - name: Setup PostgreSQL
      uses: Harmon758/postgresql-action@v1.0.0
      with:
        postgresql version: 12.2
        postgresql db: 'test'
        postgresql user: 'test_user'
        postgresql password: '1234'

    - name: Install dependencies
      env:
        pythonLocation: /opt/hostedtoolcache/Python/3.9.2/x64
        LD_LIBRARY_PATH: /opt/hostedtoolcache/Python/3.9.2/x64/lib
      run: |
        python -m pip install --upgrade pip
        pip install pytest
        pip3 install -r requirements.txt
    - name: Test with pytest
      run: |
        cd app
        /opt/hostedtoolcache/Python/3.9.2/x64/bin/pytest -v --ignore=sendgrid --cov --junitxml=junit/test-results.xml --cov-report=xml --cov-report=html
      env:
        SENDGRID_API_KEY: ${{ secrets.SENDGRID_API_KEY }}
        SENDGRID_VERIFY_EMAIL_TEMPLATE_ID: ${{ secrets.SENDGRID_VERIFY_EMAIL_TEMPLATE_ID }}

    - name: Upload pytest test results
      uses: actions/upload-artifact@v2
      with:
        name: pytest-results
        path: junit/test-results.xml
      # Use always() to always run this step to publish test results when there are test failures
      if: ${{ always() }}
    - name: Upload pytest coverage results
      uses: actions/upload-artifact@v2
      with:
        name: pytest-results
        path: app/coverage.xml
      # Use always() to always run this step to publish test results when there are test failures
      if: ${{ always() }}
